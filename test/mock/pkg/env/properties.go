// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/env/properties.go

// Package mock_env is a generated GoMock package.
package mock_env

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIParameterBroker is a mock of IParameterBroker interface.
type MockIParameterBroker struct {
	ctrl     *gomock.Controller
	recorder *MockIParameterBrokerMockRecorder
}

// MockIParameterBrokerMockRecorder is the mock recorder for MockIParameterBroker.
type MockIParameterBrokerMockRecorder struct {
	mock *MockIParameterBroker
}

// NewMockIParameterBroker creates a new mock instance.
func NewMockIParameterBroker(ctrl *gomock.Controller) *MockIParameterBroker {
	mock := &MockIParameterBroker{ctrl: ctrl}
	mock.recorder = &MockIParameterBrokerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIParameterBroker) EXPECT() *MockIParameterBrokerMockRecorder {
	return m.recorder
}

// GetExchange mocks base method.
func (m *MockIParameterBroker) GetExchange() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchange")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetExchange indicates an expected call of GetExchange.
func (mr *MockIParameterBrokerMockRecorder) GetExchange() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchange", reflect.TypeOf((*MockIParameterBroker)(nil).GetExchange))
}

// GetQueueName mocks base method.
func (m *MockIParameterBroker) GetQueueName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQueueName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetQueueName indicates an expected call of GetQueueName.
func (mr *MockIParameterBrokerMockRecorder) GetQueueName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQueueName", reflect.TypeOf((*MockIParameterBroker)(nil).GetQueueName))
}

// GetRoutingKey mocks base method.
func (m *MockIParameterBroker) GetRoutingKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoutingKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRoutingKey indicates an expected call of GetRoutingKey.
func (mr *MockIParameterBrokerMockRecorder) GetRoutingKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoutingKey", reflect.TypeOf((*MockIParameterBroker)(nil).GetRoutingKey))
}

// GetUri mocks base method.
func (m *MockIParameterBroker) GetUri() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUri")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUri indicates an expected call of GetUri.
func (mr *MockIParameterBrokerMockRecorder) GetUri() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUri", reflect.TypeOf((*MockIParameterBroker)(nil).GetUri))
}

// GetVhost mocks base method.
func (m *MockIParameterBroker) GetVhost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVhost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetVhost indicates an expected call of GetVhost.
func (mr *MockIParameterBrokerMockRecorder) GetVhost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVhost", reflect.TypeOf((*MockIParameterBroker)(nil).GetVhost))
}
